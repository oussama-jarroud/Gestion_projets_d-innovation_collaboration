version: '3.8'

services:
  # Service pour la base de données TimescaleDB
  db:
    image: timescale/timescaledb:latest-pg15
    container_name: tsdb_predictive_maintenance
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: predictive_maintenance_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d predictive_maintenance_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Service pour l'API FastAPI
  backend:
    build:
      context: ./backend # Le Dockerfile du backend sera dans le dossier './backend'
      dockerfile: Dockerfile
    container_name: fastapi_predictive_maintenance
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/predictive_maintenance_db # URL de connexion à la DB
    depends_on:
      db:
        condition: service_healthy # Attend que le service DB soit sain
    volumes:
      - ./backend:/app # Monte le code source local dans le container
    command: sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload" # Exécute les migrations et lance l'API
    # Remarque : Les migrations Alembic seront gérées ici, nous y reviendrons.

  # Service pour pgAdmin (interface graphique pour gérer PostgreSQL/TimescaleDB)
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_predictive_maintenance
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: password
    depends_on:
      db:
        condition: service_healthy # Attend que la DB soit saine
    volumes:
      - pgadmin_data:/var/lib/pgadmin # Volume persistant pour la configuration pgAdmin

volumes:
  db_data:
  pgadmin_data: